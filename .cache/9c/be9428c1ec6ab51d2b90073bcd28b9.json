{"id":"index.js","dependencies":[{"name":"/Users/cherry/repos/ReactBootcamp/portfolio/.babelrc","includedInParent":true,"mtime":1572099717000},{"name":"/Users/cherry/repos/ReactBootcamp/portfolio/package.json","includedInParent":true,"mtime":1572274040820},{"name":"react","loc":{"line":1,"column":18},"parent":"/Users/cherry/repos/ReactBootcamp/portfolio/src/index.js","resolved":"/Users/cherry/repos/ReactBootcamp/portfolio/node_modules/react/index.js"},{"name":"react-dom","loc":{"line":2,"column":21},"parent":"/Users/cherry/repos/ReactBootcamp/portfolio/src/index.js","resolved":"/Users/cherry/repos/ReactBootcamp/portfolio/node_modules/react-dom/index.js"},{"name":"./index.css","loc":{"line":3,"column":7},"parent":"/Users/cherry/repos/ReactBootcamp/portfolio/src/index.js","resolved":"/Users/cherry/repos/ReactBootcamp/portfolio/src/index.css"},{"name":"./App","loc":{"line":4,"column":16},"parent":"/Users/cherry/repos/ReactBootcamp/portfolio/src/index.js","resolved":"/Users/cherry/repos/ReactBootcamp/portfolio/src/App.js"}],"generated":{"js":"\"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nrequire(\"./index.css\");\n\nvar _App = _interopRequireDefault(require(\"./App\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_reactDom.default.render(_react.default.createElement(_App.default, null), document.getElementById('root')); // setTimeout is ansync\n// new Promise((resolve, reject) => {\n//   return reject(new Error('No bears'))\n//   setTimeout(() => {\n//     resolve('Bears, Beets, Battlestar Galactica')\n//   }, 2000)\n// })\n//   .then((quote) => {\n//     console.log(quote)\n//   })\n//   .catch((error) => console.log('error', error))\n// if calling with the fetch method, the way to handle the completion of a promise is by chaining a .then handler. Takes a callback fn itself. This callback will fire once the resolve has completed.\n// reject method if call fails, important to have return keyword to escape out of the rest of the code. Handle errors using .catch handler"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"name":"ReactDOM","generated":{"line":13,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"name":"render","generated":{"line":13,"column":18},"source":"index.js","original":{"line":6,"column":9}},{"generated":{"line":13,"column":24},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":25},"source":"index.js","original":{"line":6,"column":16}},{"generated":{"line":13,"column":54},"source":"index.js","original":{"line":6,"column":17}},{"generated":{"line":13,"column":66},"source":"index.js","original":{"line":6,"column":16}},{"generated":{"line":13,"column":73},"source":"index.js","original":{"line":6,"column":0}},{"name":"document","generated":{"line":13,"column":75},"source":"index.js","original":{"line":6,"column":25}},{"generated":{"line":13,"column":83},"source":"index.js","original":{"line":6,"column":33}},{"name":"getElementById","generated":{"line":13,"column":84},"source":"index.js","original":{"line":6,"column":34}},{"generated":{"line":13,"column":98},"source":"index.js","original":{"line":6,"column":25}},{"generated":{"line":13,"column":99},"source":"index.js","original":{"line":6,"column":49}},{"generated":{"line":13,"column":105},"source":"index.js","original":{"line":6,"column":25}},{"generated":{"line":13,"column":106},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":109},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":14,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":18,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":22,"column":0}}],"sources":{"index.js":"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// setTimeout is ansync\n\n// new Promise((resolve, reject) => {\n//   return reject(new Error('No bears'))\n//   setTimeout(() => {\n//     resolve('Bears, Beets, Battlestar Galactica')\n//   }, 2000)\n// })\n//   .then((quote) => {\n//     console.log(quote)\n//   })\n//   .catch((error) => console.log('error', error))\n\n// if calling with the fetch method, the way to handle the completion of a promise is by chaining a .then handler. Takes a callback fn itself. This callback will fire once the resolve has completed.\n// reject method if call fails, important to have return keyword to escape out of the rest of the code. Handle errors using .catch handler\n"},"lineCount":null}},"error":null,"hash":"1fdddc9951f913ce0e082091d6bcef87","cacheData":{"env":{}}}